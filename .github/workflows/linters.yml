# This workflow will install Python dependencies, run linter checks and report results.

name: Linters

on:
  pull_request:
    branches: [ "main" ]

jobs:
  check:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: 3.12
    - name: Install poetry
      uses: abatilo/actions-poetry@v2
    - name: Setup a local virtual environment (if no poetry.toml file)
      run: |
        poetry config virtualenvs.create true --local
        poetry config virtualenvs.in-project true --local
    - uses: actions/cache@v3
      name: Define a cache for the virtual environment based on the dependencies lock file
      with:
        path: ./.venv
        key: venv-${{ hashFiles('poetry.lock') }}
    - name: Install the project dependencies
      run: poetry install
    - name: Lint with pylint
      run: |
        poetry run pylint jsonator/ tests/
    - name: Check with mypy
      run: |
        poetry run mypy jsonator/ tests/
    - name: Check with isort
      run: |
        poetry run isort --check-only jsonator/ tests/
    - name: Check with black
      run: |
        poetry run black --check jsonator/ tests/
